Option Explicit
    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swDraw As SldWorks.DrawingDoc
    Dim swFeat As SldWorks.Feature
    Dim swBomFeat As SldWorks.BomFeature
    Dim swTable As SldWorks.TableAnnotation
    Dim swView As SldWorks.View
    Dim DrawingPath As String
    Dim AsmPath As String
    Dim partCount As New Collection
    Dim partNumber1 As New Collection
    Dim partItem As New Collection
    
    
    

Sub setUpTable(ConfigNames As Variant)
    Dim index As Long
    Dim x As Double
    Dim y As Boolean
    Dim rows As Integer
    Dim columns As Integer
        
    rows = 13
    columns = 21
    
    Set swTable = swDraw.InsertTableAnnotation2(True, 0, 0, swBOMConfigurationAnchor_TopLeft, "", rows, columns)
    
    'Merging cells for descriptions
    y = swTable.MergeCells(0, 0, 0, 2)
    y = swTable.MergeCells(0, 3, 0, 4)
    y = swTable.MergeCells(0, 5, 0, 19)
    
    'Setting row height
    For index = 0 To swTable.RowCount
        x = swTable.SetRowHeight(index, 0.008, 0)
    Next
        
    'Setting column widths
    For index = 0 To 3
        x = swTable.SetColumnWidth(index, 0.008, 0)
    Next
    
    x = swTable.SetColumnWidth(3, 0.04, 0)
    x = swTable.SetColumnWidth(4, 0.072, 0)
    
    For index = 5 To columns
        x = swTable.SetColumnWidth(index, 0.008, 0)
    Next
    
    x = swTable.SetColumnWidth(columns - 1, 0.04, 0)
    
    'Setting text format for cells
    Dim tFormat As TextFormat
    Set tFormat = swTable.GetTextFormat
    tFormat.CharHeightInPts = 11
    y = swTable.SetTextFormat(False, tFormat)
    Set tFormat = swTable.GetCellTextFormat(1, 0)
    tFormat.LineLength = 0.008
    tFormat.CharHeight = 0.001
    x = swTable.SetCellTextFormat(1, 0, False, tFormat)
    
    'Setting text for cells
    swTable.Text(1, 0) = "Ôîðìàò"
    swTable.Text(1, 2) = "¹"
    swTable.Text(1, 3) = "Äåòàéë"
    swTable.Text(1, 4) = "Îïèñàíèå"
    swTable.Text(0, 5) = "Ñãëîáåíà åäèíèöà"
    swTable.Text(0, 20) = "Áåëåæêà"
    
    For index = 1 To 12 Step 1
        swTable.Text(1 + index, 3) = partNumber1.Item(index)
    Next
    
    Dim checkItemIndex As Integer
    checkItemIndex = 0
    
    For index = 1 To 12 Step 1
        If checkItemIndex < partItem.Item(index) Then
            swTable.Text(1 + index, 2) = partItem.Item(index)
            checkItemIndex = partItem.Item(index)
        End If
        
    Next
    
    Dim swConfig As SldWorks.Configuration
    
    Set swModel = swApp.ActivateDoc3(AsmPath, False, 0, 0)
    
    For index = 0 To UBound(ConfigNames)
                Set swConfig = swModel.GetConfigurationByName(ConfigNames(index))
                If Not swConfig Is Nothing Then
                    swTable.Text(1, 5 + index) = Right(swConfig.Description, 2)
                    
                Else
                    Debug.Print "NO DESCRIPTION"
                End If
    Next
    Set swModel = swApp.ActivateDoc3(DrawingPath, False, 0, 0)
End Sub

Sub PopulateNewTable()

End Sub

Sub ProcessTableAnn(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swTableAnn As SldWorks.TableAnnotation, ConfigName As String, vConfigNames As Variant)

    Dim nNumRow As Long
    Dim J As Long
    Dim I As Long
    Dim ItemNumber As String
    Dim partNumber As String
    Dim objRet As Object
    
    Debug.Print "   Table Title        " & swTableAnn.Title

    nNumRow = swTableAnn.RowCount

    Dim swBOMTableAnn As BomTableAnnotation
    Set swBOMTableAnn = swTableAnn

    For J = 1 To nNumRow - 1
        Dim count As Long
        count = swBOMTableAnn.GetComponentsCount2(J, ConfigName, ItemNumber, partNumber)
        'Debug.Print "   Row Number " & J & " Component Count  : " & swBOMTableAnn.GetComponentsCount2(J, ConfigName, ItemNumber, PartNumber)
        Debug.Print "       Item Number  : " & ItemNumber
        Debug.Print "       Part Number  : " & partNumber
       
        partCount.Add (count)
        partItem.Add (ItemNumber)
        partNumber1.Add (partNumber)
        
        Dim vPtArr As Variant
        Dim swComp As Object
        Dim pt As Object
        Dim compPath As String

        vPtArr = swBOMTableAnn.GetComponents2(J, ConfigName)

        If (Not IsEmpty(vPtArr)) Then
            For I = 0 To UBound(vPtArr)
                Set pt = vPtArr(I)
                Set swComp = pt
                If Not swComp Is Nothing Then
                    Debug.Print "           Component Name :" & swComp.Name2 & "      Configuration Name : " & swComp.ReferencedConfiguration
                    Debug.Print "           Component Path :" & swComp.GetPathName
                Else
                    Debug.Print "  Could not get component."
                End If
            Next
        End If
    Next J
End Sub

 
 
Sub ProcessBomFeature(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swBomFeat As SldWorks.BomFeature)

    Dim swFeat As SldWorks.Feature
    Dim vTableArr As Variant
    Dim vTable As Variant
    Dim vConfigArray As Variant
    Dim vConfig As Variant
    Dim ConfigName As String
    Dim tAnnotation As SldWorks.TableAnnotation
    Dim swAnnotation As SldWorks.Annotation
    Dim swTable As SldWorks.TableAnnotation

    Set swFeat = swBomFeat.GetFeature
    
    vTableArr = swBomFeat.GetTableAnnotations

    For Each vTable In vTableArr
        Set swTable = vTable
        vConfigArray = swBomFeat.GetConfigurations(True, True)
        For Each vConfig In vConfigArray
             ConfigName = vConfig
             Debug.Print "-------------------------------------------------------"
             Debug.Print " Component for Configuration : " & ConfigName
             ProcessTableAnn swApp, swModel, swTable, ConfigName, vConfigArray
        Next vConfig
    Next vTable
    
    setUpTable (vConfigArray)
    
    'Hide BOM
    Set tAnnotation = swBomFeat.GetTableAnnotations(0)
    Set swAnnotation = tAnnotation.GetAnnotation
    swAnnotation.Visible = swAnnotationVisibilityState_e.swAnnotationHidden
End Sub

 
Sub main()
    Debug.Print String(255, vbNewLine)
    Set swApp = Application.SldWorks
    Set swModel = swApp.ActiveDoc
    Set swDraw = swModel
    Set swView = swDraw.GetFirstView
    Set swView = swView.GetNextView
        
    If Not swView Is Nothing Then
        AsmPath = swView.GetReferencedModelName
        Debug.Print "Success = " & swView.GetReferencedModelName
    End If
    
    If Not swModel Is Nothing Then
        DrawingPath = swModel.GetPathName
        Debug.Print "Success = " & swModel.GetPathName
    End If
    
    Set swFeat = swModel.FirstFeature
    
    Do While Not swFeat Is Nothing
        If "BomFeat" = swFeat.GetTypeName Then
            Debug.Print "******************************"
            Debug.Print "Feature Name : " & swFeat.Name

            Set swBomFeat = swFeat.GetSpecificFeature2
            ProcessBomFeature swApp, swModel, swBomFeat
        End If
        Set swFeat = swFeat.GetNextFeature
    Loop
    
End Sub
