    Dim itemNumber As String
    Dim partNames As Variant
    Dim partCount As New Collection
    Dim partDescription As String
    Dim Standard As Boolean
    Dim Asm As Boolean
    
    
    Private Sub Class_Initialize()
        ReDim partNames(1)
        itemNumber = ""
        partPath = ""
        partDescription = ""
        Standard = False
        Asm = False
    End Sub
    
    Sub SetStandardPart(isStandard As Boolean)
        Standard = isStandard
    End Sub
    
    Function isStandard() As Boolean
        isStandard = Standard
    End Function
    
    Sub SetAsmPart(isAsm As Boolean)
        Asm = isAsm
    End Sub
    
    Function isAsm() As Boolean
        isAsm = Asm
    End Function
    
    Sub SetItemNumber(item As String)
        If (itemNumber = "") Then
            itemNumber = item
            Debug.Print "ItemNumber: " & itemNumber
        End If
    End Sub
    
    Function GetItemNumber() As String
        If itemNumber <> "" Then
            GetItemNumber = itemNumber
            Debug.Print "ItemNumber: " & itemNumber
            Exit Function
        Else
            GetItemNumber = "No Item Number"
        End If
        Exit Function
    End Function
    
    Sub AddPartNames(newPartName As String)
        Dim oldSize As Integer
        oldSize = UBound(partNames)
        ReDim partNames(oldSize + 1)
        partNames(oldSize) = newPartName
    End Sub
    
    Sub SetPartDescription(swModel As SldWorks.ModelDoc2, swApp As SldWorks.SldWorks)
        
    End Sub
    
    Function GetPartDescription() As String
        If partDescription <> "" Then
            GetPartDescription = partDescription
            Exit Function
        Else
            GetPartDescription = "No Part desc"
        End If
        Exit Function
    End Function
    
    Function GetNamesCount() As Integer
        If UBound(partNames) > 0 Then
            GetNamesCount = UBound(partNames)
            Exit Function
        Else
            GetNamesCount = 0
        End If
        Exit Function
    End Function
    
    Sub SetPartCount(pCount As Integer, asmConfigName As String, asmPartName As String)
        On Error Resume Next
            partCount.Add pCount, asmConfigName + asmPartName
            Debug.Print "Count: " & pCount & " Key: " & asmConfigName & asmPartName
        On Error GoTo 0
    End Sub
    
    Function GetPartCount()

    End Function

    

