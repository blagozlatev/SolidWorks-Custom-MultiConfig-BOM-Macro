'Author: Blagovest Zlatev
Dim itemNumber As String
Dim partNames As New Collection
Dim partCount As New Collection
Dim partDescription As String
Dim Standard As Boolean
Dim Asm As Boolean
    
    
Private Sub Class_Initialize()
    itemNumber = ""
    partPath = ""
    partDescription = ""
    Standard = False
    Asm = False
End Sub
    
Public Sub ResetPart()
    Dim counter As Integer
    itemNumber = ""
    partPath = ""
    partDescription = ""
    Standard = False
    Asm = False
    For counter = 1 To partNames.Count - 1
        partNames.Remove (counter)
    Next counter
    For counter = 1 To partCount.Count - 1
        partCount.Remove (counter)
    Next counter
End Sub
    
Sub SetStandardPart(isStandard As Boolean)
    Standard = isStandard
End Sub
    
Function isStandard() As Boolean
    isStandard = Standard
End Function
    
Sub SetAsmPart(isAsm As Boolean)
    Asm = isAsm
End Sub
    
Function isAsm() As Boolean
    isAsm = Asm
End Function
    
Sub SetItemNumber(item As String)
    itemNumber = item
    'DEBUGGING
    'Debug.Print "ItemNumber: " & itemNumber
    'END_DEBUGGING
End Sub
    
Function GetItemNumber() As String
    GetItemNumber = itemNumber
    'DEBUGGING
    'Debug.Print "ItemNumber: " & itemNumber
    'END_DEBUGGING
    Exit Function
End Function
    
Sub AddPartNames(newPartName As String)
    partNames.Add newPartName
End Sub
    
Sub SetPartDescription(swModel As SldWorks.ModelDoc2, swApp As SldWorks.SldWorks)
        
End Sub
    
Function GetPartDescription() As String
    If partDescription <> "" Then
        GetPartDescription = partDescription
        Exit Function
    Else
        GetPartDescription = "No Part desc"
        Exit Function
    End If
End Function
    
Function GetNamesCount() As Integer
    GetNamesCount = partNames.Count
    Exit Function
End Function
    
Sub SetPartCount(pCount As Integer, asmConfigName As String, asmPartName As String)
    On Error Resume Next
    partCount.Add pCount, asmConfigName + asmPartName
    'DEBUGGING
    'Debug.Print "Count: " & pCount & " Key: " & asmConfigName & asmPartName
    'END_DEBUGGING
    On Error GoTo 0
End Sub
        
Function GetPartCount()

End Function

'DEBUGGING
Sub PrintInfoInDebug()
    Dim i As Integer
    
    Debug.Print "PART Item Number: " & itemNumber
    For i = 1 To partNames.Count
        Debug.Print "PART " & itemNumber & " PartName: " & partNames.item(i)
    Next
End Sub
'END_DEBUGGING

