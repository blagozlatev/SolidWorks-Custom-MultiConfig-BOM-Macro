'Author: Blagovest Zlatev
Option Explicit

Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swDraw As SldWorks.DrawingDoc
Dim swView As SldWorks.View
Dim swFeat As SldWorks.Feature

Dim configurationNames As Variant
Dim collectionPartInfo As Collection

Function setIsAsm(vPathNames As Variant) As Boolean
    If (Not IsEmpty(vPathNames)) Then
        Dim i As Integer
        Dim swPathName As String
                            
        For i = 0 To UBound(vPathNames)
            If (Right(vPathNames(i), 3) = "ASM") Then
                setIsAsm = True
                Exit Function
            End If
        Next
    End If
    setIsAsm = False
    Exit Function
End Function

Function setTblAnnotationCustomBomProperties(bomTblAnn As SldWorks.BomTableAnnotation) As SldWorks.TableAnnotation
    Dim swTblAnn As SldWorks.TableAnnotation
    Set swTblAnn = bomTblAnn
    
    swTblAnn.InsertColumn2 swTableItemInsertPosition_Before, 2, "Îïèñàíèå", swInsertColumn_DefaultWidth
    bomTblAnn.SetColumnCustomProperty 2, "Îïèñàíèå"
    bomTblAnn.SetColumnCustomProperty 3, "Ñòàíäàðòåí äåòàéë"
    
    Set setTblAnnotationCustomBomProperties = swTblAnn
End Function

Function setBomTableAnnotation(sView As SldWorks.View) As SldWorks.BomTableAnnotation
    Dim bomTblAnnotation As SldWorks.BomTableAnnotation
    Dim bomStandard As String
    
    bomStandard = "C:\Program Files\SOLIDWORKS Corp\SOLIDWORKS\lang\english\bom-standard.sldbomtbt"
    Set bomTblAnnotation = sView.InsertBomTable3(False, 0, 0, swBOMConfigurationAnchor_BottomLeft, swBomType_TopLevelOnly, configurationNames(0), bomStandard, False)
    
    bomTblAnnotation.BomFeature.SetConfigurations True, True, configurationNames
    bomTblAnnotation.BomFeature.DisplayAsOneItem = True
    bomTblAnnotation.BomFeature.PartConfigurationGrouping = 1
    Set setBomTableAnnotation = bomTblAnnotation
    Exit Function
End Function

Function getPartInfo(swTblAnnotation As SldWorks.TableAnnotation, bomTblAnnotation As SldWorks.BomTableAnnotation) As Collection
    Dim PartInfo As New Collection
    Dim Part As CustomPartInfo
    Dim PathNames As Variant
    
    Dim itemNumber As String
    Dim partNumber As String
    
    Dim lowestItemNumber As String
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim itemNumberForChecking As String
    
    lowestItemNumber = "0"
    itemNumber = "1"
        
    Set Part = New CustomPartInfo
    For i = 0 To swTblAnnotation.RowCount - 1
        bomTblAnnotation.GetModelPathNames i, itemNumber, partNumber
        If (lowestItemNumber < itemNumber) Then
            If (i > 1) Then
                Part.SetItemNumber (lowestItemNumber)
                Part.SetAsmPart (setIsAsm(bomTblAnnotation.GetModelPathNames(i - 1, itemNumberForChecking, partNumber)))
                Part.SetPartDescription (swTblAnnotation.DisplayedText(i - 1, 2))
                Part.SetStandardPart (swTblAnnotation.DisplayedText(i - 1, 3))
                PartInfo.Add Part
                Set Part = New CustomPartInfo
            End If
            
            lowestItemNumber = itemNumber
                                
            For j = i To swTblAnnotation.RowCount - 1
                bomTblAnnotation.GetModelPathNames j, itemNumberForChecking, partNumber
                If (lowestItemNumber <> itemNumberForChecking) Then
                    Exit For
                End If
                
                Part.AddPartNames (partNumber)
                For k = 0 To UBound(configurationNames)
                        Dim x As Integer
                        x = bomTblAnnotation.GetComponentsCount2(j, configurationNames(k), itemNumberForChecking, partNumber)
                        Part.SetPartCount x, k, partNumber
                Next k
            Next j
        End If
    Next i
    
    Part.SetItemNumber (lowestItemNumber)
    Part.SetAsmPart (setIsAsm(bomTblAnnotation.GetModelPathNames(i - 1, itemNumber, partNumber)))
    Part.SetPartDescription (swTblAnnotation.DisplayedText(i - 1, 2))
    Part.SetStandardPart (swTblAnnotation.DisplayedText(i - 1, 3))
    PartInfo.Add Part
    
    Set getPartInfo = PartInfo
    Exit Function
End Function

Sub main()
    Set swApp = Application.SldWorks
    Set swModel = swApp.ActiveDoc
    Set swDraw = swModel
        
    Dim drawingPath As String
    Dim asmPath As String
    Dim index As Long
    
    Dim collectionPartInfo As Collection
    Dim swTblAnnotation As SldWorks.TableAnnotation
    Dim i As Integer
    
    If Not swModel Is Nothing Then
        drawingPath = swModel.GetPathName
        
        'DEBUGGING
        Debug.Print "Success = " & swModel.GetPathName
        'END_DEBUGGING
    End If
        
        
    Set swView = swDraw.GetFirstView
    Set swView = swView.GetNextView
    
    If Not swView Is Nothing Then
        asmPath = swView.GetReferencedModelName
        
        'DEBUGGING
        Debug.Print "Success = " & swView.GetReferencedModelName
        'END_DEBUGGING
        
        Set swModel = swApp.ActivateDoc3(asmPath, False, 0, 0)
        configurationNames = swModel.GetConfigurationNames
        swView.SetVisible False, False
        Set swModel = swApp.ActivateDoc3(drawingPath, False, 0, 0)
    End If
            
    Dim bomTblAnnotation As SldWorks.BomTableAnnotation
    Set bomTblAnnotation = setBomTableAnnotation(swView)
    Set swTblAnnotation = setTblAnnotationCustomBomProperties(bomTblAnnotation)
            
    Set collectionPartInfo = getPartInfo(swTblAnnotation, bomTblAnnotation)
        
    For i = 1 To collectionPartInfo.Count
        Debug.Print "--------------------------PART " & i & "--------------------------"
        collectionPartInfo(i).PrintInfoInDebug (configurationNames)
    Next
    
    swModel.ForceRebuild3 (True)
End Sub

